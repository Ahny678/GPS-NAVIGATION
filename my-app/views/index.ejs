<!DOCTYPE html>
<html>
  <head>
    <title>Test</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <script src="/javascripts/getLoc.js"></script>
  </head>
  <body>
    <div class="container">
      <!-- <h1>Access Your GPS Location</h1>
      <p>Click the button below to get your current GPS coordinates and send them to the server.</p>

      <button onclick="getLocation()">Get Location</button> -->

      <div id="location"></div>
      <div id="error"></div>

      <h1><%= title %></h1>

      <h3>ESP32 Status</h3>

      <div class="status-list">
        <div class="status-item">
          <span class="label">Distance to obstacle:</span>
          <span class="value" id="gpsData"><%= espStatus.distance %> cm</span>
        </div>

        <div class="status-item">
          <span class="label">Distance to target:</span>
          <span class="value" id="targetDistance"
            ><%= espStatus.targetDistance %> meters</span
          >
        </div>

        <div class="status-item">
          <span class="label">Current GPS:</span>
          <span class="value" id="gpsCoords"
            >Lat=<%= espStatus.lat %>, Lon=<%= espStatus.lon %></span
          >
        </div>
        <div class="status-item">
          <span class="label">Target GPS:</span>
          <span class="value" id="targetCoords">
            <% if (espStatus.targetLat && espStatus.targetLon) { %> Lat=<%=
            espStatus.targetLat %>, Lon=<%= espStatus.targetLon %> <% } else {
            %> Not set <% } %>
          </span>
        </div>

        <div class="status-item">
          <span class="label">Yaw:</span>
          <span class="value" id="yaw"><%= espStatus.yaw %>°</span>
        </div>

        <div class="status-item">
          <span class="label">Status:</span>
          <span class="value" id="status"><%= espStatus.status %></span>
        </div>

        <div class="status-item">
          <span class="label">Obstacle:</span>
          <span class="value" id="obstacle"><%= espStatus.obstacle %></span>
        </div>

        <div class="status-item">
          <span class="label">Satellites:</span>
          <span class="value" id="satellites"><%= espStatus.satellites %></span>
        </div>

        <div class="status-item">
          <span class="label">Map:</span>
          <span class="value" id="mapLink">
            <a
              href="https://www.google.com/maps?q=<%= espStatus.lat %>,<%= espStatus.lon %>"
              target="_blank"
            >
              View on Google Maps
            </a>
          </span>
        </div>
      </div>

      <!-- Existing content above remains the same -->

      <div class="set-location">
        <h3>Set Target Location</h3>

        <div class="coord-row">
          <label for="latitude">Latitude:</label>
          <input
            type="number"
            id="latitude"
            name="latitude"
            step="any"
            placeholder="Enter latitude"
          />

          <label for="longitude">Longitude:</label>
          <input
            type="number"
            id="longitude"
            name="longitude"
            step="any"
            placeholder="Enter longitude"
          />

          <button id="setTarget">Set Target</button>
          <button id="useCurrentLocation">Use Current Coordinates</button>
        </div>

        <div
          id="targetStatus"
          style="margin-top: 10px; font-weight: bold"
        ></div>
      </div>

      <script>
        // --- Periodic status refresh ---
        setInterval(() => {
          fetch("/get-status")
            .then((res) => res.json())
            .then((data) => {
              // Distance to obstacle
              document.getElementById("gpsData").innerText =
                (data.distance ?? "N/A") + " cm";

              // Distance to target
              document.getElementById("targetDistance").innerText =
                (data.targetDistance ?? "N/A") + " meters";

              // Current GPS coordinates
              document.getElementById("gpsCoords").innerText =
                "Lat=" + (data.lat ?? "N/A") + ", Lon=" + (data.lon ?? "N/A");

              // ✅ Target GPS coordinates (added)
              document.getElementById("targetCoords").innerText =
                data.targetLat && data.targetLon
                  ? `Lat=${data.targetLat}, Lon=${data.targetLon}`
                  : "Not set";

              // Yaw
              document.getElementById("yaw").innerText =
                (data.yaw ?? "N/A") + "°";

              // Connection status
              document.getElementById("status").innerText =
                data.status ?? "Unknown";

              // Obstacle status
              document.getElementById("obstacle").innerText =
                data.obstacle ?? "Unknown";

              // Satellites
              document.getElementById("satellites").innerText =
                data.satellites ?? "N/A";

              // Google Maps link
              document.getElementById(
                "mapLink"
              ).innerHTML = `<a href="https://www.google.com/maps?q=${data.lat},${data.lon}" target="_blank">View on Google Maps</a>`;
            })
            .catch((err) => console.error("Error fetching status:", err));
        }, 2000); // refresh every 2 seconds

        // --- Manual coordinate submission ---
        document
          .getElementById("setTarget")
          .addEventListener("click", async () => {
            const latitude = parseFloat(
              document.getElementById("latitude").value
            );
            const longitude = parseFloat(
              document.getElementById("longitude").value
            );

            if (isNaN(latitude) || isNaN(longitude)) {
              document.getElementById("targetStatus").innerText =
                "❌ Invalid coordinates entered.";
              return;
            }

            try {
              const res = await fetch("/send-coordinates", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ latitude, longitude }),
              });

              if (res.ok) {
                document.getElementById(
                  "targetStatus"
                ).innerText = `✅ Target set to Lat=${latitude}, Lon=${longitude}`;
              } else {
                document.getElementById("targetStatus").innerText =
                  "❌ Failed to send coordinates to server.";
              }
            } catch (err) {
              console.error(err);
              document.getElementById("targetStatus").innerText =
                "❌ Network error.";
            }
          });

        // --- Use current coordinates ---
        document
          .getElementById("useCurrentLocation")
          .addEventListener("click", () => {
            if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(
                async (pos) => {
                  const latitude = pos.coords.latitude;
                  const longitude = pos.coords.longitude;

                  try {
                    const res = await fetch("/send-coordinates", {
                      method: "POST",
                      headers: { "Content-Type": "application/json" },
                      body: JSON.stringify({ latitude, longitude }),
                    });

                    if (res.ok) {
                      document.getElementById(
                        "targetStatus"
                      ).innerText = `✅ Current location set as target (Lat=${latitude}, Lon=${longitude})`;
                    } else {
                      document.getElementById("targetStatus").innerText =
                        "❌ Failed to send current location.";
                    }
                  } catch (err) {
                    console.error(err);
                    document.getElementById("targetStatus").innerText =
                      "❌ Network error.";
                  }
                },
                (err) => {
                  document.getElementById("targetStatus").innerText =
                    "❌ Error getting location: " + err.message;
                }
              );
            } else {
              document.getElementById("targetStatus").innerText =
                "❌ Geolocation not supported by browser.";
            }
          });
      </script>
    </div>
  </body>
</html>
